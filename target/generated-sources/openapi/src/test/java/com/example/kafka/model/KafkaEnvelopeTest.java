/*
 * Kafka Message Models
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.kafka.model;

import com.example.kafka.model.ApplicationAudit;
import com.example.kafka.model.BpmType;
import com.example.kafka.model.CamundaAudit;
import com.example.kafka.model.ErrorType;
import com.example.kafka.model.InstanceDlq;
import com.example.kafka.model.IpeAudit;
import com.example.kafka.model.MessageModelType;
import com.example.kafka.model.TaskDlq;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for KafkaEnvelope
 */
class KafkaEnvelopeTest {
    private final KafkaEnvelope model = new KafkaEnvelope();

    /**
     * Model tests for KafkaEnvelope
     */
    @Test
    void testKafkaEnvelope() {
        // TODO: test KafkaEnvelope
    }

    /**
     * Test the property 'messageId'
     */
    @Test
    void messageIdTest() {
        // TODO: test messageId
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'opTimestamp'
     */
    @Test
    void opTimestampTest() {
        // TODO: test opTimestamp
    }

    /**
     * Test the property 'syncMsgId'
     */
    @Test
    void syncMsgIdTest() {
        // TODO: test syncMsgId
    }

    /**
     * Test the property 'sourceService'
     */
    @Test
    void sourceServiceTest() {
        // TODO: test sourceService
    }

    /**
     * Test the property 'messageModelType'
     */
    @Test
    void messageModelTypeTest() {
        // TODO: test messageModelType
    }

    /**
     * Test the property 'version'
     */
    @Test
    void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'aggregateId'
     */
    @Test
    void aggregateIdTest() {
        // TODO: test aggregateId
    }

    /**
     * Test the property 'partitionKey'
     */
    @Test
    void partitionKeyTest() {
        // TODO: test partitionKey
    }

    /**
     * Test the property 'originalPayload'
     */
    @Test
    void originalPayloadTest() {
        // TODO: test originalPayload
    }

    /**
     * Test the property 'originalTopic'
     */
    @Test
    void originalTopicTest() {
        // TODO: test originalTopic
    }

    /**
     * Test the property 'originalPartition'
     */
    @Test
    void originalPartitionTest() {
        // TODO: test originalPartition
    }

    /**
     * Test the property 'originalConsumerGroup'
     */
    @Test
    void originalConsumerGroupTest() {
        // TODO: test originalConsumerGroup
    }

    /**
     * Test the property 'errorType'
     */
    @Test
    void errorTypeTest() {
        // TODO: test errorType
    }

    /**
     * Test the property 'errorMsg'
     */
    @Test
    void errorMsgTest() {
        // TODO: test errorMsg
    }

    /**
     * Test the property 'taskId'
     */
    @Test
    void taskIdTest() {
        // TODO: test taskId
    }

    /**
     * Test the property 'instanceId'
     */
    @Test
    void instanceIdTest() {
        // TODO: test instanceId
    }

    /**
     * Test the property 'bpmType'
     */
    @Test
    void bpmTypeTest() {
        // TODO: test bpmType
    }

    /**
     * Test the property 'auditType'
     */
    @Test
    void auditTypeTest() {
        // TODO: test auditType
    }

    /**
     * Test the property 'bpmSpecificField'
     */
    @Test
    void bpmSpecificFieldTest() {
        // TODO: test bpmSpecificField
    }

    /**
     * Test the property 'camundaField'
     */
    @Test
    void camundaFieldTest() {
        // TODO: test camundaField
    }

    /**
     * Test the property 'applicationName'
     */
    @Test
    void applicationNameTest() {
        // TODO: test applicationName
    }

}
