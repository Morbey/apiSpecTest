/*
 * Kafka Message Models
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.example.kafka.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.example.kafka.model.BpmType;
import com.example.kafka.model.MessageModelType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ApplicationAudit
 */
@JsonPropertyOrder({
  ApplicationAudit.JSON_PROPERTY_MESSAGE_ID,
  ApplicationAudit.JSON_PROPERTY_TIMESTAMP,
  ApplicationAudit.JSON_PROPERTY_OP_TIMESTAMP,
  ApplicationAudit.JSON_PROPERTY_SYNC_MSG_ID,
  ApplicationAudit.JSON_PROPERTY_SOURCE_SERVICE,
  ApplicationAudit.JSON_PROPERTY_MESSAGE_MODEL_TYPE,
  ApplicationAudit.JSON_PROPERTY_VERSION,
  ApplicationAudit.JSON_PROPERTY_AGGREGATE_ID,
  ApplicationAudit.JSON_PROPERTY_PARTITION_KEY,
  ApplicationAudit.JSON_PROPERTY_AUDIT_TYPE,
  ApplicationAudit.JSON_PROPERTY_APPLICATION_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-05T14:18:54.933188300+01:00[Europe/London]", comments = "Generator version: 7.6.0")
public class ApplicationAudit {
  public static final String JSON_PROPERTY_MESSAGE_ID = "messageId";
  private String messageId;

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private OffsetDateTime timestamp;

  public static final String JSON_PROPERTY_OP_TIMESTAMP = "op_timestamp";
  private OffsetDateTime opTimestamp;

  public static final String JSON_PROPERTY_SYNC_MSG_ID = "sync_msg_id";
  private String syncMsgId;

  public static final String JSON_PROPERTY_SOURCE_SERVICE = "sourceService";
  private String sourceService;

  public static final String JSON_PROPERTY_MESSAGE_MODEL_TYPE = "messageModelType";
  private MessageModelType messageModelType;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_AGGREGATE_ID = "aggregateId";
  private String aggregateId;

  public static final String JSON_PROPERTY_PARTITION_KEY = "partitionKey";
  private String partitionKey;

  public static final String JSON_PROPERTY_AUDIT_TYPE = "auditType";
  private BpmType auditType;

  public static final String JSON_PROPERTY_APPLICATION_NAME = "applicationName";
  private String applicationName;

  public ApplicationAudit() { 
  }

  public ApplicationAudit messageId(String messageId) {
    this.messageId = messageId;
    return this;
  }

   /**
   * Get messageId
   * @return messageId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMessageId() {
    return messageId;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  public ApplicationAudit timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getTimestamp() {
    return timestamp;
  }


  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public ApplicationAudit opTimestamp(OffsetDateTime opTimestamp) {
    this.opTimestamp = opTimestamp;
    return this;
  }

   /**
   * Get opTimestamp
   * @return opTimestamp
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OP_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getOpTimestamp() {
    return opTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_OP_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOpTimestamp(OffsetDateTime opTimestamp) {
    this.opTimestamp = opTimestamp;
  }


  public ApplicationAudit syncMsgId(String syncMsgId) {
    this.syncMsgId = syncMsgId;
    return this;
  }

   /**
   * Get syncMsgId
   * @return syncMsgId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SYNC_MSG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSyncMsgId() {
    return syncMsgId;
  }


  @JsonProperty(JSON_PROPERTY_SYNC_MSG_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSyncMsgId(String syncMsgId) {
    this.syncMsgId = syncMsgId;
  }


  public ApplicationAudit sourceService(String sourceService) {
    this.sourceService = sourceService;
    return this;
  }

   /**
   * Get sourceService
   * @return sourceService
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_SERVICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSourceService() {
    return sourceService;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_SERVICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceService(String sourceService) {
    this.sourceService = sourceService;
  }


  public ApplicationAudit messageModelType(MessageModelType messageModelType) {
    this.messageModelType = messageModelType;
    return this;
  }

   /**
   * Get messageModelType
   * @return messageModelType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSAGE_MODEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MessageModelType getMessageModelType() {
    return messageModelType;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE_MODEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessageModelType(MessageModelType messageModelType) {
    this.messageModelType = messageModelType;
  }


  public ApplicationAudit version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public ApplicationAudit aggregateId(String aggregateId) {
    this.aggregateId = aggregateId;
    return this;
  }

   /**
   * Get aggregateId
   * @return aggregateId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAggregateId() {
    return aggregateId;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregateId(String aggregateId) {
    this.aggregateId = aggregateId;
  }


  public ApplicationAudit partitionKey(String partitionKey) {
    this.partitionKey = partitionKey;
    return this;
  }

   /**
   * Get partitionKey
   * @return partitionKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPartitionKey() {
    return partitionKey;
  }


  @JsonProperty(JSON_PROPERTY_PARTITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartitionKey(String partitionKey) {
    this.partitionKey = partitionKey;
  }


  public ApplicationAudit auditType(BpmType auditType) {
    this.auditType = auditType;
    return this;
  }

   /**
   * Get auditType
   * @return auditType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUDIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BpmType getAuditType() {
    return auditType;
  }


  @JsonProperty(JSON_PROPERTY_AUDIT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuditType(BpmType auditType) {
    this.auditType = auditType;
  }


  public ApplicationAudit applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

   /**
   * Get applicationName
   * @return applicationName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getApplicationName() {
    return applicationName;
  }


  @JsonProperty(JSON_PROPERTY_APPLICATION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }


  /**
   * Return true if this ApplicationAudit object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationAudit applicationAudit = (ApplicationAudit) o;
    return Objects.equals(this.messageId, applicationAudit.messageId) &&
        Objects.equals(this.timestamp, applicationAudit.timestamp) &&
        Objects.equals(this.opTimestamp, applicationAudit.opTimestamp) &&
        Objects.equals(this.syncMsgId, applicationAudit.syncMsgId) &&
        Objects.equals(this.sourceService, applicationAudit.sourceService) &&
        Objects.equals(this.messageModelType, applicationAudit.messageModelType) &&
        Objects.equals(this.version, applicationAudit.version) &&
        Objects.equals(this.aggregateId, applicationAudit.aggregateId) &&
        Objects.equals(this.partitionKey, applicationAudit.partitionKey) &&
        Objects.equals(this.auditType, applicationAudit.auditType) &&
        Objects.equals(this.applicationName, applicationAudit.applicationName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageId, timestamp, opTimestamp, syncMsgId, sourceService, messageModelType, version, aggregateId, partitionKey, auditType, applicationName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationAudit {\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    opTimestamp: ").append(toIndentedString(opTimestamp)).append("\n");
    sb.append("    syncMsgId: ").append(toIndentedString(syncMsgId)).append("\n");
    sb.append("    sourceService: ").append(toIndentedString(sourceService)).append("\n");
    sb.append("    messageModelType: ").append(toIndentedString(messageModelType)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    aggregateId: ").append(toIndentedString(aggregateId)).append("\n");
    sb.append("    partitionKey: ").append(toIndentedString(partitionKey)).append("\n");
    sb.append("    auditType: ").append(toIndentedString(auditType)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `messageId` to the URL query string
    if (getMessageId() != null) {
      joiner.add(String.format("%smessageId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMessageId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `timestamp` to the URL query string
    if (getTimestamp() != null) {
      joiner.add(String.format("%stimestamp%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTimestamp()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `op_timestamp` to the URL query string
    if (getOpTimestamp() != null) {
      joiner.add(String.format("%sop_timestamp%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOpTimestamp()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sync_msg_id` to the URL query string
    if (getSyncMsgId() != null) {
      joiner.add(String.format("%ssync_msg_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSyncMsgId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sourceService` to the URL query string
    if (getSourceService() != null) {
      joiner.add(String.format("%ssourceService%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSourceService()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `messageModelType` to the URL query string
    if (getMessageModelType() != null) {
      joiner.add(String.format("%smessageModelType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMessageModelType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `version` to the URL query string
    if (getVersion() != null) {
      joiner.add(String.format("%sversion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `aggregateId` to the URL query string
    if (getAggregateId() != null) {
      joiner.add(String.format("%saggregateId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAggregateId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `partitionKey` to the URL query string
    if (getPartitionKey() != null) {
      joiner.add(String.format("%spartitionKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPartitionKey()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `auditType` to the URL query string
    if (getAuditType() != null) {
      joiner.add(String.format("%sauditType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAuditType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `applicationName` to the URL query string
    if (getApplicationName() != null) {
      joiner.add(String.format("%sapplicationName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getApplicationName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

